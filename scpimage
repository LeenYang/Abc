#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Wed Mar 28 11:09:55 2018
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don

puts "
Upload the image\r
Usage: scpimage <juggd or wawr> <ip> <lxc or Vm> <debug img name> "
 
set theuser "root"
set imagename [lindex $argv 0]
set remotehost [lindex $argv 1]
set lxc_vm [lindex $argv 2]
set debimage [lindex $argv 3]

sleep 0.1
puts "\r"
set timeout -1
puts $imagename
if { $imagename == "juggd" } {
    spawn scp Build/ubuntu-cross/apps/jug/juggd/src/juggd $theuser@$remotehost:/mnt/spirent/data/l4l7$lxc_vm/common/$debimage
} else {
   if { $imagename == "breachwawr"} {
      spawn scp Build/ubuntu-cross/wawr/src/wawr $theuser@$remotehost:/mnt/spirent/ccpu/bin/$debimage
    } else {
      spawn scp Build/ubuntu-cross/wawr/src/wawr $theuser@$remotehost:/mnt/spirent/data/l4l7$lxc_vm/common/$debimage
    }
}


expect {
    "continue connecting (yes/no)?" 
    { 
       send -- "yes\r"  
       expect "password: "
       send -- "aMP#JANH\r"
    }
    "password: " { send -- "aMP#JANH\r"}
}
#match_max 100000


expect eof
